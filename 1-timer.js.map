{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n// import iziToast from \"izitoast\";\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     userSelectedDate = selectedDates[0];\n//     validateDate();\n//   },\n// };\n\n// flatpickr(\"#datetime-picker\", options);\n\n// const startBtn = document.querySelector('[data-start]');\n// const daysDisplay = document.querySelector('[data-days]');\n// const hoursDisplay = document.querySelector('[data-hours]');\n// const minutesDisplay = document.querySelector('[data-minutes]');\n// const secondsDisplay = document.querySelector('[data-seconds]');\n// const dateTimepicker = document.querySelector(\"#datetime-picker\");\n\n// let userSelectedDate = null;\n\n// function validateDate() {\n//   if (userSelectedDate < Date.now()) {\n//     iziToast.show({\n//       title: \"Hey dear\",\n//       message: \"Please choose a date in the future\",\n//       position: \"topCenter\",\n//       closeOnEscape: true,\n//       closeOnClick: true,\n//     });\n//     startBtn.disabled = true;\n//   } else {\n//     startBtn.disabled = false;\n//   }\n// }\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// function updateTimerFace({ days, hours, minutes, seconds }) {\n//   daysDisplay.textContent = addLeadingZero(days);\n//   hoursDisplay.textContent = addLeadingZero(hours);\n//   minutesDisplay.textContent = addLeadingZero(minutes);\n//   secondsDisplay.textContent = addLeadingZero(seconds);\n// }\n\n// let countInterval = null;\n\n// function startCount() {\n//   countInterval = setInterval(() => {\n//     const timeRemain = userSelectedDate - Date.now();\n\n//     if (timeRemain <= 0) {\n//       clearInterval(countInterval);\n//       updateTimerFace({ days: \"00\", hours: \"00\", minutes: \"00\", seconds: \"00\" });\n//       startBtn.disabled = true;\n//       dateTimepicker.disabled = false;\n//       return;\n//     }\n\n//     const time = convertMs(timeRemain);\n//     updateTimerFace(time);\n//   }, 1000);\n// }\n\n\n// startBtn.addEventListener(\"click\",  () => {\n//   if (!userSelectedDate) return;\n\n//   if (countInterval) {\n//     clearInterval(countInterval);\n//   }\n\n//   dateTimepicker.disabled = true; \n//   startBtn.disabled = true; \n\n//   startCount(); \n// });\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst options = {\n  enableTime: true,     \n  time_24hr: true,       \n  defaultDate: new Date(), \n  minuteIncrement: 1,   \n  onClose(selectedDates) { \n    userSelectedDate = selectedDates[0];\n    validateDate();\n  },\n};\n\nflatpickr(\"#datetime-picker\", options); \n\nconst startBtn = document.querySelector('[data-start]');\nconst daysDisplay = document.querySelector('[data-days]');\nconst hoursDisplay = document.querySelector('[data-hours]');\nconst minutesDisplay = document.querySelector('[data-minutes]');\nconst secondsDisplay = document.querySelector('[data-seconds]');\nconst dateTimepicker = document.querySelector(\"#datetime-picker\");\n\nlet userSelectedDate = null;\n\n\nfunction validateDate() {\n  if (userSelectedDate < Date.now()) {\n    iziToast.show({\n      title: \"Помилка\",\n      message: \"Оберіть дату в майбутньому\",\n      position: \"topCenter\",\n      closeOnEscape: true,\n      closeOnClick: true,\n    });\n    startBtn.disabled = true;\n  } else {\n    startBtn.disabled = false;\n  }\n}\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimerFace({ days, hours, minutes, seconds }) {\n  daysDisplay.textContent = addLeadingZero(days);\n  hoursDisplay.textContent = addLeadingZero(hours);\n  minutesDisplay.textContent = addLeadingZero(minutes);\n  secondsDisplay.textContent = addLeadingZero(seconds);\n}\n\nlet countInterval = null;\n\nfunction startCount() {\n  countInterval = setInterval(() => {\n    const timeRemain = userSelectedDate - Date.now();\n\n    if (timeRemain <= 0) {\n      clearInterval(countInterval);\n      updateTimerFace({ days: \"00\", hours: \"00\", minutes: \"00\", seconds: \"00\" });\n      startBtn.disabled = true;\n      dateTimepicker.disabled = false;\n      return;\n    }\n\n    const time = convertMs(timeRemain);\n    updateTimerFace(time);\n  }, 1000);\n}\n\nstartBtn.addEventListener(\"click\",  () => {\n  if (!userSelectedDate) return;\n\n  if (countInterval) {\n    clearInterval(countInterval);\n  }\n\n  dateTimepicker.disabled = true; \n  startBtn.disabled = true; \n\n  startCount(); \n});\n"],"names":["options","selectedDates","userSelectedDate","validateDate","flatpickr","startBtn","daysDisplay","hoursDisplay","minutesDisplay","secondsDisplay","dateTimepicker","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerFace","countInterval","startCount","timeRemain","time"],"mappings":"+IAyGA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,CAAC,EAClCE,GACD,CACH,EAEAC,EAAU,mBAAoBJ,CAAO,EAErC,MAAMK,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,kBAAkB,EAEhE,IAAIR,EAAmB,KAGvB,SAASC,GAAe,CAClBD,EAAmB,KAAK,OAC1BS,EAAS,KAAK,CACZ,MAAO,UACP,QAAS,6BACT,SAAU,YACV,cAAe,GACf,aAAc,EACpB,CAAK,EACDN,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAExB,CAGA,SAASO,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAgB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DX,EAAY,YAAcY,EAAeJ,CAAI,EAC7CP,EAAa,YAAcW,EAAeH,CAAK,EAC/CP,EAAe,YAAcU,EAAeF,CAAO,EACnDP,EAAe,YAAcS,EAAeD,CAAO,CACrD,CAEA,IAAII,EAAgB,KAEpB,SAASC,GAAa,CACpBD,EAAgB,YAAY,IAAM,CAChC,MAAME,EAAarB,EAAmB,KAAK,IAAG,EAE9C,GAAIqB,GAAc,EAAG,CACnB,cAAcF,CAAa,EAC3BD,EAAgB,CAAE,KAAM,KAAM,MAAO,KAAM,QAAS,KAAM,QAAS,IAAI,CAAE,EACzEf,EAAS,SAAW,GACpBK,EAAe,SAAW,GAC1B,MACD,CAED,MAAMc,EAAOZ,EAAUW,CAAU,EACjCH,EAAgBI,CAAI,CACrB,EAAE,GAAI,CACT,CAEAnB,EAAS,iBAAiB,QAAU,IAAM,CACnCH,IAEDmB,GACF,cAAcA,CAAa,EAG7BX,EAAe,SAAW,GAC1BL,EAAS,SAAW,GAEpBiB,IACF,CAAC"}